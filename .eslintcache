[{"D:\\Q5Works\\Mbill\\mbill\\src\\index.js":"1","D:\\Q5Works\\Mbill\\mbill\\src\\App.js":"2","D:\\Q5Works\\Mbill\\mbill\\src\\store\\reducer.js":"3","D:\\Q5Works\\Mbill\\mbill\\src\\components\\Login.js":"4","D:\\Q5Works\\Mbill\\mbill\\src\\components\\BillGeneration.js":"5","D:\\Q5Works\\Mbill\\mbill\\src\\components\\PendingPayments.js":"6","D:\\Q5Works\\Mbill\\mbill\\src\\components\\CustomerBills.js":"7","D:\\Q5Works\\Mbill\\mbill\\src\\shared\\Configuration.js":"8","D:\\Interview\\CliniqonProject\\cliniqonFriendFinderFrontEnd\\src\\index.js":"9","D:\\Interview\\CliniqonProject\\cliniqonFriendFinderFrontEnd\\src\\App.js":"10","D:\\Interview\\CliniqonProject\\cliniqonFriendFinderFrontEnd\\src\\store\\reducer.js":"11","D:\\Interview\\CliniqonProject\\cliniqonFriendFinderFrontEnd\\src\\components\\ProfileDetails.js":"12","D:\\Interview\\CliniqonProject\\cliniqonFriendFinderFrontEnd\\src\\components\\UserSearch.js":"13","D:\\Interview\\CliniqonProject\\cliniqonFriendFinderFrontEnd\\src\\components\\Login.js":"14","D:\\Interview\\CliniqonProject\\cliniqonFriendFinderFrontEnd\\src\\components\\UserList.js":"15","D:\\Interview\\CliniqonProject\\cliniqonFriendFinderFrontEnd\\src\\components\\Registration.js":"16","D:\\Interview\\CliniqonProject\\cliniqonFriendFinderFrontEnd\\src\\components\\FriendsList.js":"17","D:\\Interview\\CliniqonProject\\cliniqonFriendFinderFrontEnd\\src\\components\\ProfileMatch.js":"18","D:\\Interview\\CliniqonProject\\cliniqonFriendFinderFrontEnd\\src\\shared\\Configuration.js":"19"},{"size":427,"mtime":1720799366501,"results":"20","hashOfConfig":"21"},{"size":1835,"mtime":1720799366477,"results":"22","hashOfConfig":"21"},{"size":1177,"mtime":1720799366502,"results":"23","hashOfConfig":"21"},{"size":5053,"mtime":1723059302720,"results":"24","hashOfConfig":"21"},{"size":18486,"mtime":1721065437799,"results":"25","hashOfConfig":"21"},{"size":9830,"mtime":1720799366497,"results":"26","hashOfConfig":"21"},{"size":32457,"mtime":1720799366496,"results":"27","hashOfConfig":"21"},{"size":292,"mtime":1723059234888,"results":"28","hashOfConfig":"21"},{"size":427,"mtime":1720799366501,"results":"29","hashOfConfig":"30"},{"size":1952,"mtime":1723114714544,"results":"31","hashOfConfig":"30"},{"size":1177,"mtime":1720799366502,"results":"32","hashOfConfig":"30"},{"size":10225,"mtime":1723117897658,"results":"33","hashOfConfig":"30"},{"size":12336,"mtime":1723121717802,"results":"34","hashOfConfig":"30"},{"size":5736,"mtime":1723121350490,"results":"35","hashOfConfig":"30"},{"size":12520,"mtime":1723120527817,"results":"36","hashOfConfig":"30"},{"size":8487,"mtime":1723122926561,"results":"37","hashOfConfig":"30"},{"size":9318,"mtime":1723114714544,"results":"38","hashOfConfig":"30"},{"size":8915,"mtime":1723115176437,"results":"39","hashOfConfig":"30"},{"size":289,"mtime":1723102890906,"results":"40","hashOfConfig":"30"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"14szbnn",{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"10330qc",{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"60"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"D:\\Q5Works\\Mbill\\mbill\\src\\index.js",[],"D:\\Q5Works\\Mbill\\mbill\\src\\App.js",[],"D:\\Q5Works\\Mbill\\mbill\\src\\store\\reducer.js",[],"D:\\Q5Works\\Mbill\\mbill\\src\\components\\Login.js",[],"D:\\Q5Works\\Mbill\\mbill\\src\\components\\BillGeneration.js",[],"D:\\Q5Works\\Mbill\\mbill\\src\\components\\PendingPayments.js",[],"D:\\Q5Works\\Mbill\\mbill\\src\\components\\CustomerBills.js",[],"D:\\Q5Works\\Mbill\\mbill\\src\\shared\\Configuration.js",[],["83","84"],"D:\\Interview\\CliniqonProject\\cliniqonFriendFinderFrontEnd\\src\\index.js",[],["85","86"],"D:\\Interview\\CliniqonProject\\cliniqonFriendFinderFrontEnd\\src\\App.js",[],"D:\\Interview\\CliniqonProject\\cliniqonFriendFinderFrontEnd\\src\\store\\reducer.js",[],"D:\\Interview\\CliniqonProject\\cliniqonFriendFinderFrontEnd\\src\\components\\ProfileDetails.js",[],"D:\\Interview\\CliniqonProject\\cliniqonFriendFinderFrontEnd\\src\\components\\UserSearch.js",["87"],"import React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport \"../styles/common.css\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport moment from \"moment\";\r\nimport { PuffLoader } from \"react-spinners\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nimport axios from \"axios\";\r\nimport Configuration from \"../shared/Configuration\";\r\n\r\nclass BillGeneration extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.config = new Configuration();\r\n    this.handleInputChange = this.handleInputChange.bind(this);\r\n    this.handleCheckBoxChange=this.handleCheckBoxChange.bind(this);\r\n    this.showPassword = this.showPassword.bind(this);\r\n    this.state = {\r\n      gender: \"male\",\r\n      fromDate: moment().format(\"YYYY-MM-DD\"),\r\n      toDate: moment().format(\"YYYY-MM-DD\"),\r\n      dateChecked: false,\r\n      loading: false,\r\n      keyword:\"\",\r\n      items: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const userData = JSON.parse(localStorage.getItem(\"userData\"));\r\n    if (userData === null || userData.accessToken === \"\") {\r\n      this.props.history.push(\"/Login\");\r\n    }\r\n    this.getItems();\r\n  }\r\n\r\n  render() {\r\n    const items = this.state.items;\r\n    const override = `\r\n        display: block;\r\n        margin: 0 auto;\r\n        border-color: blue;\r\n      `;\r\n    // eslint-disable-next-line\r\n    const menubar = (\r\n      <nav className=\"navbar navbar-default navbar-fixed-top\" role=\"navigation\">\r\n        <div className=\"container\">\r\n          <div className=\"navbar-header page-scroll\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"navbar-toggle\"\r\n              data-toggle=\"collapse\"\r\n              data-target=\".navbar-ex1-collapse\"\r\n            >\r\n              <span className=\"sr-only\">Toggle navigation</span>\r\n              <span className=\"icon-bar\"></span>\r\n              <span className=\"icon-bar\"></span>\r\n              <span className=\"icon-bar\"></span>\r\n            </button>\r\n            {/* eslint-disable-next-line*/}\r\n            <a className=\"navbar-brand page-scroll\" href=\"#page-top\">\r\n              Cliniqon User List\r\n            </a>\r\n          </div>\r\n\r\n          <div className=\"collapse navbar-collapse navbar-ex1-collapse\">\r\n            <ul className=\"nav navbar-nav navbar-right\">\r\n              <li className=\"hidden\">\r\n                {/* eslint-disable-next-line*/}\r\n                <a className=\"page-scroll\" href=\"#page-top\"></a>\r\n              </li>\r\n              <li>\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"page-scroll\"\r\n                  onClick={() => {\r\n                    this.GotoUserList();\r\n                  }}\r\n                >\r\n                  Home\r\n                </button>\r\n              </li>\r\n              <li>\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"page-scroll\"\r\n                  onClick={() => {\r\n                    this.GotoSearchPage();\r\n                  }}\r\n                >\r\n                  Search Profile\r\n                </button>\r\n              </li>\r\n              <li>\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"page-scroll\"\r\n                  onClick={() => {\r\n                    this.GotoProfileMatches();\r\n                  }}\r\n                >\r\n                  Profile Matches\r\n                </button>\r\n              </li>\r\n              <li>\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"page-scroll\"\r\n                  onClick={() => {\r\n                    this.GotoFriendsList();\r\n                  }}\r\n                >\r\n                  Friends List\r\n                </button>\r\n              </li>\r\n              <li>\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"page-scroll\"\r\n                  onClick={() => {\r\n                    this.GotoLogout();\r\n                  }}\r\n                >\r\n                  Logout\r\n                </button>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    );\r\n    let listItems = (\r\n      <div className=\"page-todo bootstrap snippets bootdeys\">\r\n        <div className=\"col-sm-7 tasks\">\r\n          <div className=\"task-list\">\r\n            <div className=\"task high\">\r\n              <div className=\"desc\">\r\n                <div className=\"title\">{this.state.noDataMessage}</div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"clearfix10\"></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n\r\n    if (items.length > 0) {\r\n      listItems = items.map((item, key) => {\r\n        return (\r\n          <div className=\"page-todo bootstrap snippets bootdeys\" key={key}>\r\n            <div className=\"col-sm-7 tasks\">\r\n              <div className=\"task-list\">\r\n                <div className=\"task medium\">\r\n                  <div className=\"desc\">\r\n                    <div className=\"profilePic\">\r\n                      <img src={item.profilePicture} alt=\"Profile Pic\" />\r\n                    </div>\r\n                    <div className=\"mainCnt\">\r\n                      <div className=\"title\">{item.name}</div>\r\n                      {/* <div>{item.profilePicture}</div> */}\r\n                      <div>Designation : {item.designation}</div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"desc\">\r\n                    <button\r\n                      className=\"btn btn-green-gradiant\"\r\n                      onClick={() => this.showUserDetails(item)}\r\n                    >\r\n                      Details\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"clearfix\"></div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n      });\r\n    }\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        {menubar}\r\n        {/* <div className=\"topBar\"> Cliniqon Usage Details </div>\r\n                <div className=\"back\"></div> */}\r\n        <div className=\"top-header container\">\r\n          <div className=\"clearfix\"></div>\r\n\r\n          <div className=\"clearfix10\"></div>\r\n          <div className=\"d-flex flex-column align-content-between\">\r\n            <div className=\"d-flex flex-column col-12\">\r\n            <label>\r\n                <input\r\n                 name=\"dateChecked\"\r\n                    type=\"checkbox\"\r\n                   className=\"dateOfBirthCheckBox\"\r\n                    onChange={this.handleCheckBoxChange}\r\n                />\r\n             <span> Search By Date Of Birth Between  </span>\r\n            </label>\r\n             \r\n\r\n              <input\r\n                value={this.state.fromDate}\r\n                name=\"fromDate\"\r\n                placeholder=\"From Date\"\r\n                type=\"date\"\r\n                className=\"form-control searchBox\"\r\n                onChange={this.handleInputChange}\r\n              />\r\n              <div className=\"clearfix10\"></div>\r\n              <input\r\n                value={this.state.toDate}\r\n                name=\"toDate\"\r\n                placeholder=\"To Date\"\r\n                type=\"date\"\r\n                className=\"form-control searchBox\"\r\n                onChange={this.handleInputChange}\r\n              />\r\n            </div>\r\n            <div className=\"clearfix10\"></div>\r\n            <div className=\"d-flex flex-column col-12\">\r\n              <input\r\n                defaultValue={this.state.keyword}\r\n                name=\"keyword\"\r\n                placeholder=\"Name/Favourite Color/Favourite Actor\"\r\n                type=\"text\"\r\n                className=\"form-control searchBox\"\r\n                onChange={this.handleInputChange}\r\n              />\r\n            </div>\r\n            <div className=\"clearfix10\"></div>\r\n            <div className=\"d-flex flex-column col-12\">\r\n              <label>Gender</label>\r\n              <select\r\n                className=\"sortBranches\"\r\n                name=\"gender\"\r\n                onChange={this.handleInputChange}\r\n              >\r\n                <option value=\"male\">Male</option>\r\n                <option value=\"female\">Female</option>\r\n                <option value=\"other\">Other</option>\r\n              </select>\r\n            </div>\r\n\r\n            <div className=\"clearfix10\"></div>\r\n            {}\r\n            <div className=\"clearfix10\"></div>\r\n            <div className=\"d-flex flex-column col-10 searchBox\">\r\n              <button\r\n                className=\"btn btn-primary\"\r\n                onClick={() => this.getItems()}\r\n              >\r\n                Search User\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <div className=\"clearfix10\"></div>\r\n        </div>\r\n\r\n        <div className=\"clearfix10\"></div>\r\n\r\n        <div className=\"items\">{listItems}</div>\r\n        <PuffLoader\r\n          color=\"#000\"\r\n          loading={this.state.isLoading}\r\n          css={override}\r\n          size={80}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n\r\n  GotoUserList() {\r\n    this.props.history.push({\r\n      pathname: \"/friendsfinder/UserList\",\r\n    });\r\n  }\r\n\r\n  GotoSearchPage() {\r\n    this.props.history.push({\r\n      pathname: \"/friendsfinder/UserSearch\",\r\n    });\r\n  }\r\n  GotoProfileMatches() {\r\n    this.props.history.push({\r\n      pathname: \"/friendsfinder/ProfileMatch\",\r\n    });\r\n  }\r\n  GotoFriendsList() {\r\n    this.props.history.push({\r\n      pathname: \"/friendsfinder/FriendsList\",\r\n    });\r\n  }\r\n  GotoLogout() {\r\n    localStorage.removeItem(\"userData\");\r\n    this.props.history.push({\r\n      pathname: \"/friendsfinder/Login\",\r\n      state: \"\",\r\n    });\r\n  }\r\n\r\n  copyToClipboard() {\r\n    navigator.clipboard.writeText(\r\n      this.state.detailBillMessage,\r\n      \"Copy this text to clipboard\"\r\n    );\r\n    alert(\"Bill Copied\");\r\n  }\r\n  showPassword() {\r\n    if (this.state.isPasswordType === \"password\") {\r\n      this.setState({ isPasswordType: \"text\" });\r\n    } else {\r\n      this.setState({ isPasswordType: \"password\" });\r\n    }\r\n  }\r\n\r\n  handleInputChange(event) {\r\n  \r\n    const target = event.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  }\r\n\r\n  handleCheckBoxChange(event) {\r\n \r\n    const target = event.target;\r\n    const value = target.checked;\r\n //   this.state.dateChecked= value;\r\n    this.setState({ dateChecked: true });\r\n  }\r\n\r\n  getItems() {\r\n    this.setState({ isLoading: true });\r\n\r\n \r\n\r\n    const userData = JSON.parse(localStorage.getItem(\"userData\"));\r\n    axios({\r\n      method: \"POST\",\r\n      url: this.config.GLOBAL_URL + \"user/getallcompanyfriends\",\r\n      data: {\r\n        requestBy: userData.id,\r\n        takeAll: true,\r\n        skip: 0,\r\n        take: 0,\r\n        isDateChecked: this.state.dateChecked,\r\n        fromDate: this.state.fromDate,\r\n        toDate: this.state.toDate,\r\n        keyword: this.state.keyword,\r\n        gender: this.state.gender,\r\n      },\r\n      headers: { Authorization: `Bearer ${userData.accessToken}` },\r\n    })\r\n      .then((response) => {\r\n        if (\r\n          response &&\r\n          response.status === 200 &&\r\n          response.data &&\r\n          response.data.result === \"Success\"\r\n        ) {\r\n          if (\r\n            response.data.responseData &&\r\n            response.data.responseData.length > 0\r\n          ) {\r\n            this.setState({\r\n              isLoading: false,\r\n              filteredItems: response.data.responseData,\r\n              items: response.data.responseData,\r\n            });\r\n          }\r\n          else\r\n        {\r\n          this.setState({\r\n            isLoading: false,\r\n            items: [],\r\n          });\r\n        }\r\n        }\r\n        else\r\n        {\r\n          this.setState({\r\n            isLoading: false,\r\n            items: [],\r\n          });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        this.setState({\r\n          error,\r\n          isLoading: false,\r\n          isFetchingDetails: false,\r\n          errorMsg: \"Something went wrong, try after sometime.\",\r\n        });\r\n      });\r\n  }\r\n\r\n  onCancel() {\r\n    this.clearState();\r\n  }\r\n\r\n  clearState() {\r\n    this.setState({\r\n      fromDate: new Date(),\r\n      toDate: new Date(),\r\n      secretKey: \"\",\r\n    });\r\n  }\r\n}\r\nexport default withRouter(connect()(BillGeneration));\r\n","D:\\Interview\\CliniqonProject\\cliniqonFriendFinderFrontEnd\\src\\components\\Login.js",[],"D:\\Interview\\CliniqonProject\\cliniqonFriendFinderFrontEnd\\src\\components\\UserList.js",[],"D:\\Interview\\CliniqonProject\\cliniqonFriendFinderFrontEnd\\src\\components\\Registration.js",[],"D:\\Interview\\CliniqonProject\\cliniqonFriendFinderFrontEnd\\src\\components\\FriendsList.js",[],"D:\\Interview\\CliniqonProject\\cliniqonFriendFinderFrontEnd\\src\\components\\ProfileMatch.js",["88"],"import axios from \"axios\";\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { PuffLoader } from \"react-spinners\";\r\nimport Configuration from \"../shared/Configuration\";\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import\r\nimport 'react-confirm-alert/src/react-confirm-alert.css'; // Import css\r\nclass ProfileMatch extends Component {\r\n\r\n    constructor(props) {\r\n\r\n        super(props);\r\n        this.config = new Configuration();\r\n\r\n\r\n\r\n        //this.handleSortChange = this.handleSortChange.bind(this);\r\n        this.state = {\r\n            loginKey: props.location.state,\r\n            header: props.location.branchDetails,\r\n            loading: false,\r\n            authorized: true,\r\n            items: [],\r\n\r\n\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n      const userData = JSON.parse(localStorage.getItem(\"userData\"));\r\n      if (userData === null || userData.accessToken === \"\") {\r\n        this.props.history.push(\"/Login\");\r\n      }\r\n      this.getProfileMatches();\r\n    }\r\n\r\n    render() {\r\n\r\n        const items = this.state.items;\r\n        //   const headerDetailsData = this.state.header;\r\n        const override = `\r\n        display: block;\r\n        margin: 0 auto;\r\n        border-color: blue;\r\n      `;\r\n      const menubar = (\r\n        <nav className=\"navbar navbar-default navbar-fixed-top\" role=\"navigation\">\r\n          <div className=\"container\">\r\n            <div className=\"navbar-header page-scroll\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"navbar-toggle\"\r\n                data-toggle=\"collapse\"\r\n                data-target=\".navbar-ex1-collapse\"\r\n              >\r\n                <span className=\"sr-only\">Toggle navigation</span>\r\n                <span className=\"icon-bar\"></span>\r\n                <span className=\"icon-bar\"></span>\r\n                <span className=\"icon-bar\"></span>\r\n              </button>\r\n              {/* eslint-disable-next-line*/}\r\n              <a className=\"navbar-brand page-scroll\" href=\"#page-top\">\r\n                Cliniqon Profile Matches\r\n              </a>\r\n            </div>\r\n  \r\n            <div className=\"collapse navbar-collapse navbar-ex1-collapse\">\r\n              <ul className=\"nav navbar-nav navbar-right\">\r\n                <li className=\"hidden\">\r\n                  {/* eslint-disable-next-line*/}\r\n                  <a className=\"page-scroll\" href=\"#page-top\"></a>\r\n                </li>\r\n                <li>\r\n                  <button\r\n                    type=\"submit\"\r\n                    className=\"page-scroll\"\r\n                    onClick={() => {\r\n                      this.GotoUserList();\r\n                    }}\r\n                  >\r\n                    Home\r\n                  </button>\r\n                </li>\r\n                <li>\r\n                  <button\r\n                    type=\"submit\"\r\n                    className=\"page-scroll\"\r\n                    onClick={() => {\r\n                      this.GotoSearchPage();\r\n                    }}\r\n                  >\r\n                    Search Profile\r\n                  </button>\r\n                </li>\r\n                <li>\r\n                  <button\r\n                    type=\"submit\"\r\n                    className=\"page-scroll\"\r\n                    onClick={() => {\r\n                      this.GotoProfileMatches();\r\n                    }}\r\n                  >\r\n                    Profile Matches\r\n                  </button>\r\n                </li>\r\n                <li>\r\n                  <button\r\n                    type=\"submit\"\r\n                    className=\"page-scroll\"\r\n                    onClick={() => {\r\n                      this.GotoFriendsList();\r\n                    }}\r\n                  >\r\n                    Friends List\r\n                  </button>\r\n                </li>\r\n                <li>\r\n                  <button\r\n                    type=\"submit\"\r\n                    className=\"page-scroll\"\r\n                    onClick={() => {\r\n                      this.GotoLogout();\r\n                    }}\r\n                  >\r\n                    Logout\r\n                  </button>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </nav>\r\n      );\r\n\r\n        let listItems = <div className=\"container page-todo bootstrap snippets bootdeys\">\r\n            <div className=\"col-sm-7 tasks\">\r\n                <div className=\"task-list\">\r\n\r\n                    <div className=\"task high\">\r\n                        <div className=\"desc\">\r\n                            <div className=\"title\">{this.state.noDataMessage}</div>\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n\r\n\r\n\r\n                    <div className=\"clearfix\"></div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n      if (items.length > 0) {\r\n        listItems = items.map((item, key) => {\r\n          return (\r\n            <div className=\"page-todo bootstrap snippets bootdeys\" key={key}>\r\n              <div className=\"col-sm-7 tasks\">\r\n                <div className=\"task-list\">\r\n                  <div className=\"task medium\">\r\n                    <div className=\"desc\">\r\n                      <div className=\"profilePic\">\r\n                        <img src={item.profilePicture} alt=\"Profile Pic\" />\r\n                      </div>\r\n                      <div className=\"mainCnt\">\r\n                        <div className=\"title\">{item.name}</div>\r\n                        {/* <div>{item.profilePicture}</div> */}\r\n                        <div>Designation : {item.designation}</div>\r\n                        <div>Match : {item.profileMatchPercentage} %</div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"desc\">\r\n                      <button\r\n                        className=\"btn btn-green-gradiant\"\r\n                        onClick={() => this.showUserDetails(item)}\r\n                      >\r\n                        Details\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n  \r\n                  <div className=\"clearfix\"></div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          );\r\n        });\r\n      }\r\n\r\n\r\n        return (\r\n\r\n            <div className=\"App\">\r\n                {menubar}\r\n                {/* <div className=\"topBar\"> Cliniqon Usage Details </div>\r\n                <div className=\"back\"></div> */}\r\n\r\n\r\n                <div className=\"clearfix10\"></div>\r\n\r\n                <div className=\"items\">\r\n\r\n                    {listItems}\r\n                </div>\r\n                <PuffLoader color=\"#000\" loading={this.state.loading} css={override} size={80} />\r\n\r\n            </div>\r\n        );\r\n\r\n    }\r\n    showUserDetails(item) {\r\n      this.props.history.push({\r\n        pathname: \"/friendsfinder/ProfileDetails\",\r\n        state: item.id,\r\n        \r\n      });\r\n    }\r\n    getProfileMatches() {\r\n      const userData = JSON.parse(localStorage.getItem(\"userData\"));\r\n        this.setState({ loading: true });\r\n        axios({\r\n            method: \"POST\",\r\n            url: this.config.GLOBAL_URL + 'user/getprofilesbymatchpercentage',\r\n            data: {\r\n              id: userData.id,\r\n            },\r\n            headers: { Authorization: `Bearer ${userData.accessToken}` },\r\n        }).then(response => {\r\n\r\n\r\n            if (response && response.status === 200 &&\r\n                response.data && response.data.result === 'Success') {\r\n\r\n                if (response.data.responseData) {\r\n                    this.setState({\r\n                        items: response.data.responseData,\r\n                        loading: false\r\n                    });\r\n                }\r\n            }\r\n\r\n            else {\r\n                this.setState({\r\n                    items: [],\r\n                    authorized: false,\r\n                    loading: false,\r\n                    noDataMessage: \"Unauthorized login please try again\"\r\n                });\r\n            }\r\n        });\r\n        this.setState({ loading: false });\r\n    }\r\n\r\n  \r\n   \r\n\r\n    GotoUserList() {\r\n      this.props.history.push({\r\n        pathname: \"/friendsfinder/UserList\",\r\n        \r\n      });\r\n    }\r\n  \r\n    GotoSearchPage() {\r\n      this.props.history.push({\r\n        pathname: \"/friendsfinder/UserSearch\",\r\n        \r\n      });\r\n    }\r\n    GotoProfileMatches() {\r\n      this.props.history.push({\r\n        pathname: \"/friendsfinder/ProfileMatch\",\r\n        \r\n      });\r\n    }\r\n    GotoFriendsList() {\r\n      this.props.history.push({\r\n        pathname: \"/friendsfinder/FriendsList\",\r\n        \r\n      });\r\n    }\r\n    GotoLogout() {\r\n        localStorage.removeItem(\"userData\");\r\n        this.props.history.push({\r\n            pathname: '/friendsfinder/Login',\r\n            state: \"\"\r\n        });\r\n    }\r\n\r\n}\r\n\r\nexport default withRouter(connect()(ProfileMatch));","D:\\Interview\\CliniqonProject\\cliniqonFriendFinderFrontEnd\\src\\shared\\Configuration.js",[],{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"89","replacedBy":"93"},{"ruleId":"91","replacedBy":"94"},{"ruleId":"95","severity":1,"message":"96","line":338,"column":11,"nodeType":"97","messageId":"98","endLine":338,"endColumn":16},{"ruleId":"95","severity":1,"message":"99","line":7,"column":10,"nodeType":"97","messageId":"98","endLine":7,"endColumn":22},"no-native-reassign",["100"],"no-negated-in-lhs",["101"],["100"],["101"],"no-unused-vars","'value' is assigned a value but never used.","Identifier","unusedVar","'confirmAlert' is defined but never used.","no-global-assign","no-unsafe-negation"]